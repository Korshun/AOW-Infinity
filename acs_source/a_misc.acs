/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * All Out War 2 miscallenous scripts
 * Credit to VoltlocK for originally creating the engine
 * With modifications by Eruanna, Dusk and the Omega Team
 *
 * You may use portions of this script in your project as long as you give
 * credit where credit is due. Please don't be lame and just copy-paste any
 * of this and call it your own. Thanks!
 */

script 320 (int Which)
{
	//SetHudSize(1680,1050,0);
	if(Which == 0)
	{
		FadeTo(128,0,0,0.6,0.0);
		FadeTo(128,0,0,0.0,1.0);
	}	
	else if(Which == 1)
	{
		FadeTo(128,128,0,0.5,0.0);
		FadeTo(128,128,0,0.0,1.0);
	}	
	else if(Which == 2)
	{
		FadeTo(0,125,0,0.5,0.0);
		FadeTo(0,125,0,0.0,1.0);
	}	
	else if(Which == 4)
	{
		FadeTo(128,0,0,0.6,0.0);
		FadeTo(128,0,0,0.0,1.0);
	}
}

//Self heal health
script 329 (void) {
	int SelfHealCooldown = 30;
	
	if (GetHealth () <= 0) terminate;
	SetHealth (GetHealth () + 50);
	if (GetHealth () > GetSpawnHealth ()) SetHealth (GetSpawnHealth ());

	while (SelfHealCooldown > 0 && GetHealth () > 0) {
		SelfHealCooldown--;
		delay(35);
	}

	TakeInventory ("SelfHealCooldown", 1);
}

// Jumpjet fuel drain
script 331 (void) {
	delay (35);
	while (CheckInventory ("JumpjetSwitch") && GetHealth() > 0) {
		TakeInventory ("JumpjetFuel", 1);
		delay (35);
	}
}

// [SP] Player goes spectator.
script 941 (int Player) DISCONNECT {
	Thing_ChangeTID (3800+Player, 0);
}

script 948 (int time, int display) SetResultValue (TimeDelay (time, display));
script 949 (int display) SetResultValue (TimeDelay (TimedC4Delay, display));

function bool TimeDelay (int time, bool display) {
	if (Time * 35 * 60 > Timer()) {
		int TimeRemaining = (Time * 35 * 60 - Timer()) / 35;
		if (Display) {
			DisplayCross();
			SetFont ("BIGFONT");
			HudMessage (s:"You must wait \cK", d:TimeRemaining, s:"\c- seconds!";
				HUDMSG_FADEOUT, 240+PlayerNumber(), CR_RED, 0.5, 0.45, 2.0, 1.0);
		}
		return 0;
	}
	return 1;
}

// [Dusk] beacon timer reset due to it being placed underwater
script 957 (int Team) {
	SetFont ("SMALLFONT");
	
	if (Team == 0) {
		LastPurchasedBeacon[2] = 0;
		HudMessage (s:"Some \cARed\cJ mong planted a beacon \cNunderwater";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		delay (3*35);	
		HudMessage (s:"\cARed Team\cJ free to \cDrepurchase\n\cANuclear Strike Beacon";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS2, 2.0, 1.0);
	} else {
		LastPurchasedBeacon[1] = 0;
		HudMessage (s:"Some \cNBlue\cJ mong planted a beacon \cNunderwater";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		delay (3*35);
		HudMessage (s:"\cNBlue Team\cJ free to \cDrepurchase\n\cNIon Cannon Beacon";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS2, 2.0, 1.0);
	}
}

// returns renderer
script 910 (void) {SetResultValue (GetCVar ("vid_renderer"));}

// c4 explodes
script 978 (int p) {
	if (p <= 0) terminate;
	
	int c4team = TEAM_BLUE;
	if (CheckInventory ("IsRed")) c4team = TEAM_RED;
	
	int hit;
	int range = 96;
	if (c4team == TEAM_BLUE) {
		if (CheckActorDistance(0, 201, range)) hit = true;
		else if (CheckActorDistance(0, 203, range)) hit = true;
		else if (CheckActorDistance(0, 205, range)) hit = true;
		else if (CheckActorDistance(0, 207, range)) hit = true;
		else if (CheckActorDistance(0, 209, range)) hit = true;
		else if (CheckActorDistance(0, 214, range)) hit = true;
		else if (CheckActorDistance(0, 900, range)) hit = true;
		else if (CheckActorDistance(0, 902, range)) hit = true;
		else if (CheckActorDistance(0, 904, range)) hit = true;
	} else {
		if (CheckActorDistance(0, 101, range)) hit = true;
		else if (CheckActorDistance(0, 103, range)) hit = true;
		else if (CheckActorDistance(0, 105, range)) hit = true;
		else if (CheckActorDistance(0, 107, range)) hit = true;
		else if (CheckActorDistance(0, 109, range)) hit = true;
		else if (CheckActorDistance(0, 114, range)) hit = true;
		else if (CheckActorDistance(0, 901, range)) hit = true;
		else if (CheckActorDistance(0, 903, range)) hit = true;
		else if (CheckActorDistance(0, 905, range)) hit = true;
	}
	if (hit) {
		SetActivatorToTarget (0); // award the player the points, not the C4
		Team_GivePoints (c4team, p, false);
	}
}

// A_SetPitch is not available, workaround:
script 979 (int d, int n) NET CLIENTSIDE {
	delay (1);
	int newpitch;
	while (n > 0) {
		newpitch = GetActorPitch (0)+d;
		if (newpitch < -0.15) {
			SetActorPitch (0, -0.15);
			terminate;
		} else if (newpitch > 0.15) {
			SetActorPitch (0, 0.15);
			terminate;
		} else {
			SetActorPitch (0, newpitch);
		}
		
		delay (1);
		n--;
	}
}

// Missile launcher targeter
script 963 (void) CLIENTSIDE {
	if (ActivatorTID () != 3800 + ConsolePlayer) terminate;
	int mytid = 3800 + ConsolePlayer;
	int t;
	int team = PlayerTeam ();
	while (CheckWeapon ("MissileLauncher") && GetActorProperty (0, APROP_Health) > 0) {
		SetActivatorToTarget (0);
		t = ActivatorTID ();
		// log (s:"Tick: t=", d:t, s:", team = ", d:GetPlayerInfo (t-3800, PLAYERINFO_TEAM));
		if (t != mytid && t >= 3800 && t <= 3831 && CheckActorInventory (t, "StealthMode") != 2 &&
			GetPlayerInfo (t-3800, PLAYERINFO_TEAM) != team) {
			
			SetFont ("TARGHAIR");
			HudMessageBold (s:"a";
				HUDMSG_FADEOUT, 0, CR_UNTRANSLATED, -0.5, -0.5, HM_2TICS, HM_3TICS);
			AmbientSound ("missilelauncher/see", 127);
			delay (4);
		}
		SetActivator (mytid);
		delay (1);
	}
}