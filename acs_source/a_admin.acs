// [SP] NOTICE: This is an administrator 'puke' script. USE WITH CARE! This can be abused very easily.
script 401 (int Player,int Action)
{
	SetActivator(3800 + Player);
	switch(Action)
	{
	case 3:
		if ( ThingCount(T_NONE,3800 + Player) == 0 ) {
			Log(s:"Error: Player #",d:Player,s:" not found!");
			terminate;
		}
		if (PlayerIsBot (Player)) {
			Log (s:"Error: Player #", d:Player, s:" \"", n:Player+1, s:"\c-\" is a bot.");
			terminate;
		}
		//Player_SetTeam(255);
		SetPlayerProperty(0,1,1);
		SetPlayerProperty(0,1,2);
		SetPlayerProperty(0,1,3);
		SetFont("BIGFONT");
		HudMessageBold (n:0, s:"\c- becomes an \cGadministrator";
			HUDMSG_FADEOUT, 1800+PlayerNumber(), CR_WHITE, 0.5, 0.45, 2.0, 1.0);
		Log(s:"*** \caWARNING!\c- Game Master mode activated for ",n:Player+1,s:" \c-(IDX ",d:Player,s:") - this has been logged in the server console.");
		Log(s:"*** To deactivate this mode, you (or target) must either spectate or call a_exit in console.");
		Log(s:"*** Please don't abuse this! Do what you need to do, then exit this mode immediately.");
		GiveInventory("AdministratorSwitch",1);
		IsAdmin[Player] = true;
		GiveInventory ("IsAdmin", 1);
		break;
	case 1:
		if ( ThingCount(T_NONE,3800 + Player) == 0 )
		{
			Log(s:"Player ",d:Player,s:" not found!");
			terminate;
		}
		if ( PlayerTeam() == 0 )
		{
			Log(s:"Player ",d:Player,s:" named ",n:0,s:" is already on Blue.");
			terminate;
		}
		SetFont("BIGFONT");
		HudMessage (n:Player, s:"\c- has been forced to\n\cKchange team\c- by an \cQadmin.";
			HUDMSG_FADEOUT, 1800+PlayerNumber(), CR_GREEN, 0.5, 0.45, 2.0, 1.0);
		Player_SetTeam(0);
		Log(n:0,s:" forced to change to Blue by admin.");
		delay(1);
		Teleport(70);
		GiveInventory("HasClass",1);
		ACS_ExecuteAlways(95,0,0,0,0);
		TakeInventory("IsRed",1);
		GiveInventory("IsBlue",1);
		StartTime[Player] = -0x7FFFFFFF;
		break;
	case 2:
		if ( ThingCount(T_NONE,3800 + Player) == 0 )
		{
			Log(s:"Player ",d:Player,s:" not found!");
			terminate;
		}
		if ( PlayerTeam() == 1 )
		{
			Log(s:"Player ",d:Player,s:" named ",n:0,s:" is already on Red.");
			terminate;
		}
		SetFont("BIGFONT");
		HudMessage (n:Player, s:"\c- has been forced to\n\cKchange team\c- by an \cQadmin.";
			HUDMSG_FADEOUT, 1800+PlayerNumber(), CR_GREEN, 0.5, 0.45, 2.0, 1.0);
		Player_SetTeam(1);
		Log(n:0,s:" forced to change to Red by admin.");
		delay(1);
		Teleport(71);
		GiveInventory("HasClass",1);
		ACS_ExecuteAlways(95,0,0,0,0);
		TakeInventory("IsBlue",1);
		GiveInventory("IsRed",1);
		StartTime[Player] = -0x7FFFFFFF;
		break;
	case 0:
		switch(Player)
		{
		case 3:
			Log(s:"Usage: gamemaster <IDX> (use 'playerinfo' to get IDX numbers)");
		case 1:
			Log(s:"Usage: forceblue <IDX> (use 'playerinfo' to get IDX numbers)");
		case 2:
			Log(s:"Usage: forcered <IDX> (use 'playerinfo' to get IDX numbers)");
		default:
			Log(s:"Please don't puke this script directly! Use the provided ccmd's - it's for your sanity's own good!");
		}
	default:
		Log(s:"Unknown action!");
	}
}
script 402 (int Arg1, int Arg2, int Arg3) NET
{
	if ( IsAdmin[PlayerNumber()] == false )
		terminate;
	switch(Arg1)
	{
	case 0:
		// help!
		break;
	case 1:
		// Warp
		/*Spawn("TeleportDest",Arg2<<16,Arg3<<16,0,6003);
		delay(1);
		Teleport_NoFog(6003);
		delay(1);
		Thing_Remove(6003);*/
		// [Dusk] this should be more reliable
		SetActorPosition (0, arg2<<16, arg3<<16, 0, false);
		break;
	case 2:
		// Teleport to spot
		if (arg2 <= 0) {
			HudMessage (s:"Usage: a_teleport <tid>\n",
				s:"TIDs of interest:\n",
				s:"1: blue base\t\t2: red base\n",
				s:"70: blue spawn room\t71: red spawn room\n",
				s:"108: blue wf hanger\t208: red wf hanger\n",
				s:"110: blue mech room\t210: red mech room\n",
				s:"111: blue res room\t211: red res room\n"; HUDMSG_PLAIN|HUDMSG_LOG, 9000, 0, 0, 0, 0);
			HudMessage (s:""; HUDMSG_PLAIN, 9000, 0, 0, 0, 0.1);
			terminate;
		}
		Teleport_NoFog(Arg2);
		break;
	case 3:
		// Activate crate
		ACS_ExecuteAlways (309, 0, Arg2, Arg3);
		break;
	case 4:
	case 5:
		break;
	case 6:
		// Toggle berserk
		if (CheckInventory ("PowerBerserk")) {
			TakeInventory ("PowerBerserk", 1);
			delay (5);
			TakeInventory ("PowerBerserkHue", 1);
			delay (3);
			GiveInventory ("RedHueRemover", 1);
		} else {
			GiveInventory ("BerserkSwitch", 1);
			delay (5);
			GiveInventory ("BerserkHue", 1);
		}
		break;
	case 7:
		// Instant resign
		if(PlayerTeam() == TEAM_RED)
			Teleport(71);
		else
			Teleport(70);
		ACS_ExecuteAlways (95, 0);
		break;
	case 8:
		// Give beacon item
		GiveInventory("BeaconItem",1);
		break;
	case 9:
		// Become Admin Player Again - or remove it
		if (CheckInventory("PowerAdministrator")) {
			TakeInventory("PowerAdministrator",1);
			SetPlayerProperty(0,0,1);
			SetPlayerProperty(0,0,2);
			SetPlayerProperty(0,0,3);
		} else {
			GiveInventory("AdministratorSwitch",1);
			SetPlayerProperty(0,1,1);
			SetPlayerProperty(0,1,2);
			SetPlayerProperty(0,1,3);
		}
		break;
	case 10:
		// Set Team
		Player_SetTeam(Arg2);
		if (Arg2 == TEAM_BLUE) {
			TakeInventory("IsRed",1);
			GiveInventory("IsBlue",1);
		} else {
			GiveInventory("IsRed",1);
			TakeInventory("IsBlue",1);
		}
		break;
	case 11:
		// Give utility gun
		GiveInventory ("RepairGun", 1);
		GiveInventory ("UtilityGun", 1);
		break;
	case 12:
		// Set speed
		SetActorProperty(0, APROP_SPEED, 0.01 * Arg2);
		break;
	case 13:
		// Admin pistol - rotate fire
		if (CheckInventory ("AdminPistolRotation") == 2)
			TakeInventory ("AdminPistolRotation", 2);
		else
			GiveInventory ("AdminPistolRotation", 1);
		
		switch (CheckInventory ("AdminPistolRotation")) {
		case 0:
			HudMessage (s:"Normal mode";
				HUDMSG_FADEOUT, 1800+PlayerNumber(), CR_WHITE, 0.5, 0.45, 1.0, 0.5);
			break;
		case 1:
			HudMessage (s:"\cJRepair / Disarm mode";
				HUDMSG_FADEOUT, 1800+PlayerNumber(), CR_WHITE, 0.5, 0.45, 1.0, 0.5);
			break;
		case 2:
			HudMessage (s:"Deconstruction mode";
				HUDMSG_FADEOUT, 1800+PlayerNumber(), CR_WHITE, 0.5, 0.45, 1.0, 0.5);
			break;
		}
		break;
	case 14:
		// Open Deck
		GiveInventory ("CrateChooser", 1);
		break;
	case 15:
		// Notarget
		SetActorProperty (0, APROP_NoTarget, !GetActorProperty (0, APROP_NoTarget));
		break;
	case 16:
		// Exit admin mode
		SetPlayerProperty (0, 0, 1);
		SetPlayerProperty (0, 0, 2);
		SetPlayerProperty (0, 0, 3);
		SetActorProperty (0, APROP_NoTarget, 0);
		SetFont("BIGFONT");
		HudMessageBold (s:"Admin ", n:0, s:"\c- becomes a regular player again.";
			HUDMSG_FADEOUT, 1800+PlayerNumber(), CR_WHITE, 0.5, 0.45, 2.0, 1.0);
		Log (n:0, s:" (#", d:PlayerNumber(), s:") exits admin mode.");
		IsAdmin[PlayerNumber()] = false;
		ACS_ExecuteAlways (96, 0, 1-PlayerTeam()); // teleport to spawn room
		delay (5);
		ACS_ExecuteAlways (95, 0); // resign
		break;
	case 17:
		// Set health
		if (arg2 <= 0) break;
		SetActorProperty (0, APROP_Health, Arg2);
		break;
	case 18:
		// Fly
		if (CheckInventory ("PowerFlight"))
			TakeInventory ("PowerFlight", 1);
		else
			GiveInventory ("AdminFlight", 1);
		break;
	default:
		Log(s:"Unknown action!");
	}
}

// TEAM SHUFFLE
// -- only use for the grossest cases of team stack
script 403 (void) {
	log (s:"[SHUFFLE] Countdown begins.");
	for (int i = 10; i > 0; i--) {
		SetFont ("BIGFONT");
		AmbientSound ("beacon/nukebeep", 127);
		HudMessageBold (s:"WARNING: Server admin has called \cRteam shuffle!!\n\n\cRALL PLAYERS\cG will switch to random teams in \cK", d:i;
			HUDMSG_FADEOUT, 2150, CR_RED, 0.5, 0.3, 0.75, 1.0);
		delay (35);
	}
	
	AmbientSound ("nuke/boom", 127);
	int max = PlayerCount()/2;
	int b, r, t;
	str name;
	int c;
	log (s:"[SHUFFLE] Begin of team shuffle.");
	// first knock out start times of everybody - we don't want team switcher to interfere here
	for (i = 0; i <= 31; i++) if (PlayerInGame (i)) StartTime[i] = -0x7FFFFFFF;
	
	for (i = 0; i <= 31; i++) {
		if (!PlayerInGame (i)) continue;
		
		// don't interfere gamemasters, they're here to do something important
		if (!IsAdmin [i]) {
			t = random (TEAM_BLUE, TEAM_RED);
			// keep teams even
			if (t == TEAM_BLUE && b >= max) t = TEAM_RED;
			else if (t == TEAM_RED && r >= max) t = TEAM_BLUE;
		} else t = GetPlayerInfo (i, PLAYERINFO_TEAM);
		
		if (t) {name="Red"; r++;} else {name="Blue"; b++;}
		
		SetActivator (3800+i);
		if (GetPlayerInfo (i, PLAYERINFO_TEAM) == t) {
			log (s:"[SHUFFLE] Player ", d:0, s:" \"", n:0, s:"\c-\" remains on ", s:name, s:".");
			c = 0;
		} else {
			log (s:"[SHUFFLE] Player ", d:0, s:" \"", n:0, s:"\c-\" changes to ", s:name, s:".");
			Player_SetTeam (t);
			c = 1;
		}
		
		if (!IsAdmin [i]) {
			if (!CheckInventory ("IsInSpawnRoom") || c) Teleport (70 + PlayerTeam());
			ACS_ExecuteAlways (95, 0, 0, TRUE);
		}
		
		delay (5);
	}
	
	SetActivator (-1);
	HudMessageBold (s:"Shuffle complete. Game on!"; HUDMSG_FADEOUT, 0, CR_GREEN, 0.5, 0.3, 3.5, 1.0);
	log (s:"[SHUFFLE] Shuffle complete.");
}

// ERROR: SCRIPT NOT FOUND >:V
// developer mode: activates all researches, knocks out money limits... 
// basically I got tired of going past limits when testing stuff.

script 404 (void) {
	// This is a dangerous script. RCON must call it twice, if it ever does that...
	if (Timer() > DeveloperSafetyLock) {
		DeveloperSafetyLock = Timer() + 10*35;
		Log (s:"Call activatedeveloper again to activate deverloper mode.");
		Log (s:"WARNING: THIS WILL MAKE ALL PLAYERS GAMEMASTER! DO NOT USE IN PUBLIC GAMES!");
		terminate;
	}
	
	Developer = true;
	
	SetFont ("BIGFONT");
	HudMessageBold (s:"DEVELOPER MODE ACTIVATED\n\nALL PLAYERS ARE NOW GAMEMASTERS";
		HUDMSG_FADEOUT, 1800+PlayerNumber(), CR_BLUE, 0.5, 0.45, 2.0, 1.0);
	Log(s:"*** \caWARNING!\c- Developer mode active. ALL players are now gamemasters.");
	
	for (int i = 0; i <= 1; i++) {
		EnhancedRefining[i] = true;
		AdvancedMechResearch[i] = true;
		AdvancedTurrets[i] = true;
		MoreTurrets[i] = true;
		MaxTurrets[i] = 1000000;
	}
	
	// disable limits and delays
	ConsoleCommand ("set aow_c4limit -1");
	ConsoleCommand ("set aow_guardianlimit 32");
	ConsoleCommand ("set aow_teamstaytime -1");
	ConsoleCommand ("set aow_maxcannonsperteam -1");
	ConsoleCommand ("set aow_plasmacooldown -1");
	ConsoleCommand ("set aow_beaconpurchasedelay -1");
	ConsoleCommand ("set aow_maxtimecopsperteam -1");
	
	// make everybody gamemaster, but don't morph them
	for (i = 0; i <= 31; i++) IsAdmin[i] = true;
}