/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * All Out War 2 powerup crate-related scripts
 * Credit to VoltlocK for originally creating the engine
 * With modifications by Eruanna, Dusk and the Omega Team
 *
 * You may use portions of this script in your project as long as you give
 * credit where credit is due. Please don't be lame and just copy-paste any
 * of this and call it your own. Thanks!
 */

script 312 OPEN {
	while (1) {
		CrateNumber += random (0, MAX_CRATE);
		CrateNumber %= MAX_CRATE;
		CrateNumber++;
		delay (35);
	}
	restart;
}

script 309 (int Crate, int Override) {
	// Crate determines which crate is given, 0 means random
	// Override means whether all limits should be overridden. Open Deck needs this.
	int i;
	if (!Crate) {
		// Crate = random(1, MAX_CRATE);
		Crate = CrateNumber;
		Override = false;
		
		// bump the value to keep two simultaneous
		// crates from having the same effect
		CrateNumber += random (0, MAX_CRATE);
		CrateNumber %= MAX_CRATE;
		CrateNumber++;
	}
	
	switch (crate) {
	case 1:
	case 17:
		if (GetArmorGrade () >= 5 && !Override) {crate = 0; restart;}
		SetFont("SMALLFONT");
		HudMessage (s:"\cKArmor upgraded!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		LocalAmbientSound("powerup/armr",255);
		SetArmorGrade (1, AGF_ADDITIVE|ARMOD_NOCHANGE);
		Log(n:0, s:" gets Armor Upgrade crate.");
		break;
	case 2:
		SetFont ("SMALLFONT");
		AmbientSound ("powerup/base", 127);	
		Log (n:0, s:" gets Base Miracle.");
		if(PlayerTeam() == TEAM_RED) {
			HudMessageBold (s:"\cARed Team\cJ got \cDBase Miracle!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
			
			if (GotBarracks[0]) SetActorHealth (201, GetActorSpawnHealth (201));
			if (GotRefinery[0]) SetActorHealth (203, GetActorSpawnHealth (203));
			if (GotPlant[0]) SetActorHealth (205, GetActorSpawnHealth (205));
			if (GotFactory[0]) SetActorHealth (207, GetActorSpawnHealth (207));
  			if (GotObelisk[0]) SetActorHealth (214, GetActorSpawnHealth (214));
		} else if(PlayerTeam() == TEAM_BLUE) {
			HudMessageBold (s:"\cNBlue Team\cJ got \cDBase Miracle!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
			if (GotBarracks[1]) SetActorHealth (101, GetActorSpawnHealth (101));
			if (GotRefinery[1]) SetActorHealth (103, GetActorSpawnHealth (103));
			if (GotPlant[1]) SetActorHealth (105, GetActorSpawnHealth (105));
			if (GotFactory[1]) SetActorHealth (107, GetActorSpawnHealth (107));
  			if (GotObelisk[1]) SetActorHealth (114, GetActorSpawnHealth (114));
		}
		ACS_ExecuteAlways (930, 0, BUILDING_ALL, PlayerTeam());
		HudMessage (s:"\cDBase miracle!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		break;
	case 3:
	case 21:
		if ((CheckInventory ("ChemicalArmor") || CheckInventory ("PowerChemicalProof")) && !Override) {
			crate = 1; // armor upgrade
			restart;
		}
		SetFont("SMALLFONT");
		HudMessage (s:"\cDChemical proof!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		LocalAmbientSound("powerup/chem",255);
		LocalAmbientSound ("misc/armor_pkup", 127);
		GiveInventory ("ChemicalArmor", 1);
		Log(n:0, s:" gets Chem Proof.");
		break;
	case 4:
	case 22:
		if (CheckInventory ("PowerFirepowerUpgrade") && !Override) {crate = 0; restart;}
		SetFont("SMALLFONT");
		HudMessage (s:"\cKFirepower upgraded!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		LocalAmbientSound("powerup/dama",255);
		GiveInventory("FirepowerUpgrade",1);
		Log(n:0, s:" gets FirePower Upgrade crate.");
		break;
	case 5:
	case 16:
		SetFont("SMALLFONT");
		HudMessage (s:"You got extra \cQ$\cD", d:CreditAwardAmount, s:"!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		LocalAmbientSound("powerup/cred",255);
		Delay(4);
		LocalAmbientSound("powerup/credsound",255);
		AddCreditsSilent(Credits[PlayerNumber()+1], CreditAwardAmount);
		Log(n:0, s:" gets Bonus Credits Crate.");
		break;
	case 6:
	case 23:
		if (Rank[PlayerNumber()] >= RANK_COMMANDO && !Override) {crate = 0; restart;}
		SetFont("SMALLFONT");
		Log(n:0, s:" gets Bonus XP crate.");
		HudMessage (s:"\cJYou got \cD250 \cQXP\cJ!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		LocalAmbientSound("powerup/exp",255);
		
		for (i = 0; i < 5; i++) {
			Delay(5);
			LocalAmbientSound("c4/use",255);
			AddExperience (50);
		}
		break;
	case 7:
	case 18:
		if ((CheckInventory ("FireArmor") || CheckInventory ("PowerFireProof")) && !Override) {
			crate = 1; // armor upgrade
			restart;
		}
		
		SetFont("SMALLFONT");
		HudMessage (s:"\cKFire proof!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		LocalAmbientSound("powerup/fire",255);
		LocalAmbientSound ("misc/armor_pkup", 127);
		GiveInventory ("FireArmor", 1);
		Log(n:0, s:" gets Fire Proof crate.");
		break;
	case 8:
	case 24:
		if (!Override && (CheckInventory("StealthLaserRifle") || CheckInventory ("Knife"))) {
			crate = 0; restart;
		}
		
		if (!Override && (CheckInventory("PowerInvisibility"))) {
			crate = 0; restart;
		}
		LocalAmbientSound("powerup/invi",255);
		LocalAmbientSound("powerup/invisound",255);
		
		SetFont("SMALLFONT");
		if(PlayerTeam() == TEAM_RED)
			HudMessageBold (s:"\cARed player\cJ got \cUStealth Crate!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		else if(PlayerTeam() == TEAM_BLUE)
			HudMessageBold (s:"\cNBlue player\cJ got \cUStealth Crate!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		
		SetArmorGrade (-1, AGF_ADDITIVE|ARMOD_NOCHANGE);
		GiveInventory ("StealthLaserRifle", 1);
		GiveInventory ("LaserRifleAmmo", 100);
		SetActorProperty(0,APROP_DeathSound,"stealth/death");
		Log(n:0, s:" gets Stealth crate.");
		
		HudMessage (s:"\cUStealth rifle!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		delay (2*35);
		HudMessage (s:"\cJUse the rifle's \cKAlt-Fire\cJ\nto toggle \cUstealth!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		break;
	case 9:
	case 25:
		if (CheckInventory ("PowerInvulnerable") && !Override) {crate = 0; restart;}
		if (TournamentMode) {crate = 0; restart;}
		
		SetFont("SMALLFONT");
		LocalAmbientSound("powerup/iron", 255);
		LocalAmbientSound("powerup/invisound", 255);
		GiveInventory("IronCurtain", 1);
		Log (n:0, s:" gets Iron Curtain.");
		
		if (PlayerTeam() == TEAM_RED)
			HudMessageBold (s:"\cARed player\cJ got \cCIron Curtain!!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		else if (PlayerTeam() == TEAM_BLUE)
			HudMessageBold (s:"\cNBlue player\cJ got \cCIron Curtain!!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		HudMessage (s:"\cCIron curtain!!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		break;
	case 10:
	case 26:
	case 36:
		if (CheckInventory ("IsKamikaze") && !Override) {crate = 0; restart;}
		
		SetFont("SMALLFONT");
		if (TournamentMode) { // [SP] This crate is forbidden in tournament mode
			ACS_ExecuteAlways(309, 0);
			terminate;
		}
		LocalAmbientSound("powerup/kama",255);
		
		if(PlayerTeam() == TEAM_RED)
			HudMessageBold (s:"Some crazy ass \cARed player\cJ got\nthe \cKKamikaze Crate!!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS2, 2.0, 1.0);
		else if(PlayerTeam() == TEAM_BLUE)
			HudMessageBold (s:"Some crazy ass \cNBlue player\cJ got\nthe \cKKamikaze Crate!!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS2, 2.0, 1.0);
		HudMessage (s:"\cKKamikaze!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		
		GiveInventory("IsKamikaze",1);
		Log(n:0, s:" gets Kamikaze.");
		break;
	case 11:
	case 27:
		SetFont("SMALLFONT");
		if (!Override && (CrateTime || CheckInventory("PlasmaCannon"))) {
			ACS_ExecuteAlways(309, 0);
			terminate;
		}
		LocalAmbientSound("powerup/plas",255);
		
		if(PlayerTeam() == TEAM_RED)
			HudMessageBold (s:"\cARed player\cJ got \cNPlasma Cannon Crate!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		else if(PlayerTeam() == TEAM_BLUE)
			HudMessageBold (s:"\cNBlue player\cJ got \cNPlasma Cannon Crate!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		HudMessage (s:"\cNPlasma Cannon!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		
		GiveInventory("PlasmaCannon",1);
		GiveInventory("PlasmaCannonAmmo",10);
		RecountPlasma ();
		Log(n:0, s:" gets Plasma Cannon.");
		break;
	case 12:
	case 19:
		if (!CheckInventory ("HasClass") && !Override) {crate = 0; restart;}
		SetFont("BIGFONT");
		HudMessage(s:"RESIGNED"; HUDMSG_FADEOUT, 240+PlayerNumber(), CR_DarkRed, 0.5, 0.35, 2.0, 1.0);
		LocalAmbientSound("powerup/resi",255);
		SetFont("SMALLFONT");
		
		if(PlayerTeam() == TEAM_RED)
			Teleport(71);
		else if(PlayerTeam() == TEAM_BLUE)
			Teleport(70);
		
		ACS_ExecuteAlways(95, 0);
		Log(n:0, s:" gets Resign Crate.");
		break;
	case 13:
	case 20:
		SetFont("SMALLFONT");
		
		if (!Override) {
			if (CheckInventory ("PowerSpeedUpgrade")) {crate = 0; restart;}
		
			// this crate ruins stealth due to speed trails
			if (CheckInventory ("StealthLaserRifle") || CheckInventory ("Knife")) {crate = 0; restart;}
			
			// also blurspheres
			if (CheckInventory ("PowerInvisibility")) {crate = 0; restart;}
		}
		
		LocalAmbientSound("powerup/sped",255);
		HudMessage (s:"\cDSpeed upgraded!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		GiveInventory("SpeedUpgrade",1);
		Log(n:0, s:" gets Speed Upgrade.");
		break;
	case 14:
	case 28:
		SetFont("SMALLFONT");
		HudMessage (s:"\cJYou lost \cQ$\cD", d:CreditAwardAmount;
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		LocalAmbientSound("powerup/stol",255);
		Delay(4);
		LocalAmbientSound("powerup/stolsound",255);
		TakeCreditsSilent(Experience[PlayerNumber()+1], CreditAwardAmount);
		Log(n:0, s:" gets Credits Stolen.");
		break;
	case 15:
		if (CheckInventory ("TimeGun") && !Override) {crate = 0; restart;}
		
		LocalAmbientSound ("powerup/time", 127);
		LocalAmbientSound ("misc/timewarp", 64);
		
		SetFont ("SMALLFONT");
		if(PlayerTeam() == TEAM_RED)
			HudMessageBold (s:"\cARed player\cJ got \cITime Gun Crate!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		else if(PlayerTeam() == TEAM_BLUE)
			HudMessageBold (s:"\cNBlue player\cJ got \cITime Gun Crate!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		GiveInventory("TimeGunAmmo",30);
		GiveInventory("TimeGun",1);
		
		HudMessage (s:"You got the \cITime Gun!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		
		Log(n:0, s:" gets Time Gun Crate.");
		RecountTimeCops ();
		break;
	case 29:
	case 30:
	case 31:
	case 32:
	case 33:
	case 34:
	case 56:
		// [Dusk] high rank dudes get less of these
		if (Rank[PlayerNumber()] >= RANK_LIEUTENANT && !random (0, 2)) {Crate = 0; restart;}
		SetFont("BIGFONT");
		HudMessage(s:"BOMB CRATE!"; HUDMSG_FADEOUT, 240+PlayerNumber(), CR_RED, 0.5, 0.45, 2.0, 1.0);
		if (GetCVar ("aow_oldbombcrate")) {
			AmbientSound("weapons/rocklx",255);
			SetFont ("SMALLFONT");
			HudMessageBold (s:"Some poor bugga got the bomb crate";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
			Log (n:0, s:" gets bomb crate and goes boom boom.");
			GiveInventory ("IsBombCrate", 1);
			delay(1);
			Thing_Destroy (ActivatorTID(), 1); // death state spawns big boom
			terminate;
		}
		
		SetFont ("SMALLFONT");
		HudMessageBold (n:0, s:" is gonna blow!!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		
		if (PlayerTeam() == TEAM_BLUE)
			GiveInventory ("BombCrateFXGiverBlue", 1);
		else
			GiveInventory ("BombCrateFXGiverRed", 1);
		
		ActivatorSound ("powerup/bomb", 127);
		
		for (i = 0; i <= 3; i++) {
			if (GetHealth() <= 0) {
				FadeTo (0, 0, 0, 0, 1.0);
				terminate;
			}
			
			// CancelFade () doesn't work online
			if (PlayerTeam() == TEAM_BLUE)
				FadeTo (0, 0, 255, i*0.1, 1.0);
			else
				FadeTo (255, 128, 0, i*0.1, 1.0);
		
			delay (35);
		}
		
		if (PlayerTeam() == TEAM_BLUE)
			FadeTo (0, 0, 255, 0.48, 0.8);
		else
			FadeTo (255, 128, 0, 0.48, 0.8);
		
		delay (28);
		FadeTo (0, 0, 0, 0, 1.0);
		if (!CheckInventory ("IsInSpawnRoom")) GiveInventory ("IsKamikaze", 1);
		delay (1);
		Thing_Destroy (ActivatorTID(), 1);
		terminate;
	case 35:
		SetFont("SMALLFONT");
		if(CrateTime == True)
		{
			ACS_ExecuteAlways(309, 0);
			terminate;
		}
		AmbientSound("weapons/rocklx",255);
		AmbientSound("powerup/crsh",255);
		if(PlayerTeam() == TEAM_RED)
		{
			HudMessageBold (s:"Poor \cARed Team\cJ got \cRBase Crasher";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
			Thing_Damage(201,4000,0);
			Thing_Damage(203,4000,0);
			Thing_Damage(205,4000,0);
			Thing_Damage(207,4000,0);
			Thing_Damage(214,2500,0);
		}
		else if(PlayerTeam() == TEAM_BLUE)
		{
			HudMessageBold (s:"Poor \cNBlue Team\cJ got \cRBase Crasher";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
			Thing_Damage(101,4000,0);
			Thing_Damage(103,4000,0);
			Thing_Damage(105,4000,0);
			Thing_Damage(107,4000,0);
			Thing_Damage(114,2500,0);
		}
		HudMessage (s:"\cRBase crasher!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		ACS_ExecuteAlways (930, 0, BUILDING_ALL, PlayerTeam()); // update the hud
		break;
	case 37:
	case 38:
		if (CheckInventory ("UtilityGun") && !Override) {crate = 0; restart;}
		SetFont("SMALLFONT");
		GiveInventory("UtilityGun", 75);
		GiveInventory("Utility_Ammo", 75);
		Log(n:0, s:" gets Utility Gun crate.");
		HudMessage (s:"You got the \cKUtility Gun!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		delay (2*35);
		HudMessage (s:"Use \cFAlt-Fire\cJ for \cNitem selection menu!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		break;
	case 39:
	case 40:
		if ((CheckInventory ("LaserArmor") || CheckInventory ("PowerLaserResistance")) && !Override) {
			crate = 1; // armor upgrade
			restart;
		}
		
		SetFont("SMALLFONT");
		HudMessage (s:"\cNLaser resistance!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		LocalAmbientSound("powerup/resistlaser", 127);
		LocalAmbientSound ("misc/armor_pkup", 127);
		GiveInventory ("LaserArmor", 1);
		Log(n:0, s:" gets Laser Resistance.");
		break;
	case 41:
	case 42:
		if ((CheckInventory ("ExplosionArmor") || CheckInventory ("PowerExplosiveResistance")) && !Override) {
			crate = 1; // armor upgrade
			restart;
		}
		
		SetFont("SMALLFONT");
		HudMessage (s:"\cIExplosive resistance!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		LocalAmbientSound("powerup/resistexplosive", 127);
		LocalAmbientSound ("misc/armor_pkup", 127);
		GiveInventory ("ExplosionArmor", 1);
		Log(n:0, s:" gets Explosive Resistance.");
		break;
	case 43:
	case 44:
		if ((CheckInventory ("BulletArmor") || CheckInventory ("PowerBulletResistance")) && !Override) {
			crate = 1; // armor upgrade
			restart;
		}
		
		SetFont("SMALLFONT");
		HudMessage (s:"\cUBulletproof Vest!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		LocalAmbientSound("powerup/resistbullet",255);
		LocalAmbientSound ("misc/armor_pkup", 127);
		GiveInventory ("BulletArmor", 1);
		Log(n:0, s:" gets Bulletproof Vest.");
		break;
	case 45:
		if (!Override && (CrateTime || CheckInventory("IsMech") || !MechEnabled || CheckInventory ("GuardianPowerup"))) {
			crate = 0; restart;
		}
		
		Log(n:0, s:" gets Guardian crate.");
		GiveInventory("GuardianPowerup",1);
		GiveInventory("FlamerAmmo", 200);
		GiveInventory("NukeAmmo", 1);
		
		LocalAmbientSound ("switch/lrm", 127);
		
		SetFont ("SMALLFONT");
		if(PlayerTeam() == TEAM_RED)
			HudMessageBold (s:"\cARed player\cJ got \cKGuardian Crate!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		else if(PlayerTeam() == TEAM_BLUE)
			HudMessageBold (s:"\cNBlue player\cJ got \cKGuardian Crate!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		
		HudMessage (s:"\cJGuardian suit!\nPress \cF", k:"invuse", s:"\cJ to enter";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS2, 2.0, 1.0);
		break;
	case 46:
		if (CrateTime || CheckInventory("IsMech") || CheckInventory("PowerBerserk")) {
			crate = 0; restart;
		}
		
		SetFont("SMALLFONT");
		GiveInventory ("BerserkSwitch", 1);
		delay (5);
		GiveInventory ("BerserkHue", 1);
		
		SetFont ("SMALLFONT");
		if(PlayerTeam() == TEAM_RED)
			HudMessageBold (s:"\cARed player\cJ got \cGBerserk!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		else if(PlayerTeam() == TEAM_BLUE)
			HudMessageBold (s:"\cNBlue player\cJ got \cGBerserk!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		HudMessage (s:"\cGBerserk!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		Log(n:0, s:" gets Berserk Crate.");
		break;
	case 47:
	case 48:
		if (CheckInventory ("HealingRadiusItem") && !Override) {crate = 0; restart;}
		SetFont("SMALLFONT");
		HudMessage (s:"\cAHealing Radius!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		GiveInventory("HealingRadiusItem",1);
		ACS_ExecuteAlways (352, 0);
		Log(n:0, s:" gets Healing Radius crate.");
		break;
	case 49:
	case 50:
		for (int k = 0; k<32; k++) {
			if ( PlayerInGame(k) && GetPlayerInfo(k,PLAYERINFO_TEAM) == PlayerTeam() )
			{
				if ( GetActorProperty(3800+k,APROP_Health) < GetActorProperty(3800+k,APROP_SpawnHealth) )
					SetActorProperty(3800+k,APROP_Health,GetActorProperty(3800+k,APROP_SpawnHealth));
			}
		}
		
		Log(n:0, s:" gets Team Revival crate.");
		
		SetFont ("SMALLFONT");
		if(PlayerTeam() == TEAM_RED)
			HudMessageBold (s:"\cARed Team\cJ got \cATeam Revival!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		else if(PlayerTeam() == TEAM_BLUE)
			HudMessageBold (s:"\cNBlue Team\cJ got \cATeam Revival!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		HudMessage (s:"\cATeam revival!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		break;
	case 51:
	case 52:
		if (!Override && CheckInventory ("EagerBeaver")) {crate = 0; restart;}
		SetFont ("SMALLFONT");
		HudMessage (s:"\cKA chainsaw! Find some meat!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		GiveInventory ("EagerBeaver", 1);
		Log(n:0, s:" gets Chainsaw crate.");
		
		// [Dusk] The chainsaw replaces unarmed, therefore
		// if we use the fists, switch to the chainsaw.
		if (CheckWeapon ("Unarmed"))
			SetWeapon ("EagerBeaver");
		else
			LocalAmbientSound ("weapons/sawup", 127);
			
		TakeInventory ("Unarmed", 1);
		break;
	case 53:
	case 54:
		if (!Override && CheckInventory("MarineBeaconItem")) {crate = 0; restart;}
		if (AIMarineCount >= MAX_MARINES) {crate = 0; restart;}
		
		SetFont("SMALLFONT");
		HudMessage (s:"\cFMarine Beacon!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		GiveInventory("MarineBeaconItem",1);
		ACS_ExecuteAlways (352, 0);
		Log(n:0, s:" gets Marine Beacon.");
		break;
	case 55:
		if (Timer() < 10*60*35 || CheckInventory ("CrateChooser") || TournamentMode) {
			if (!Override) {Crate = 0; restart;}
		}
		
		SetFont("SMALLFONT");
		if (PlayerTeam() == TEAM_RED)
			HudMessageBold (s:"\cARed player\cJ got \cKOpen Deck!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		else
			HudMessageBold (s:"\cNBlue player\cJ got \cKOpen Deck!";
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		
		HudMessage (s:"\cKOPEN DECK!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
			
		LocalAmbientSound ("powerup/invisound", 127);
		GiveInventory ("CrateChooser", 1);
		Log (n:0, s:" gets Open Deck.");
		break;
	case 57:
	case 58:
		SetFont("SMALLFONT");
		GiveInventory ("ThermalCloakingTime", 90);
		ACS_ExecuteAlways(953, 0);
		Log(n:0, s:" gets Thermal Cloaking.");
		HudMessage (s:"\cUThermal cloaking!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		delay (35);
		HudMessage (s:"Turrets cannot see you for 90 seconds";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		break;
	case 59:
	case 60:
		// high rank dudes get less of these
		if (Rank[PlayerNumber()] >= RANK_LIEUTENANT && !random (0, 2)) {Crate = 0; restart;}
		if (CheckInventory ("IsMech")) {crate = 0; restart;}
		SetFont ("BIGFONT");
		HudMessage (s:"Disarm crate!"; HUDMSG_FADEOUT, 240+PlayerNumber(), CR_RED, 0.5, 0.45, 2.0, 1.0);
		SetFont ("SMALLFONT");
		HudMessageBold (s:"Somebody went and lost all of his weapons.";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		Log (n:0, s:" gets disarm crate.");
		
		CheckAndRemove ("Boomstick");
		CheckAndRemove ("DoubleShotgun");
		CheckAndRemove ("Rifle");
		CheckAndRemove ("GaussRifle");
		CheckAndRemove ("Grenade_Launcher");
		CheckAndRemove ("StealthLaserRifle");
		CheckAndRemove ("LaserRifle");
		CheckAndRemove ("TimeGun");
		CheckAndRemove ("MissileLauncher");
		CheckAndRemove ("CrateChooser");
		CheckAndRemove ("LaserChaingun");
		CheckAndRemove ("UtilityGun");
		CheckAndRemove ("PlasmaCannon");
		CheckAndRemove ("ArtilleryCannon");
		CheckAndRemove ("ChemicalSprayer");
		CheckAndRemove ("TiberiumAutorifleWeak");
		CheckAndRemove ("TiberiumAutorifle");
		CheckAndRemove ("FragGrenade");
		CheckAndRemove ("RepairGunUpgrade");
		if (Rank[PlayerNumber()] != RANK_COMMANDO) CheckAndRemove ("RepairGun");
		CheckAndRemove ("HealGun");
		CheckAndRemove ("BombSquadGun");
		CheckAndRemove ("SubMachineGun");
		CheckAndRemove ("Flamer");
		CheckAndRemove ("ShockRifle");
		CheckAndRemove ("SniperRifle");
		CheckAndRemove ("SniperRifleWeak");
		CheckAndRemove ("PlasmaGun");
		CheckAndRemove ("MachineGun");
		CheckAndRemove ("GatlingGun");
		CheckAndRemove ("JumpjetGatlingGun");
		
		if (CheckInventory ("EagerBeaver")) {
			TakeInventory ("EagerBeaver", 1);
			GiveInventory ("Unarmed", 1);
		}
		
		if (CheckInventory ("Knife"))
			SetWeapon ("Knife");
		else
			SetWeapon ("Handgun");
		
		SetActorSpeed (0, 1.0);
		PlayerSpeeds[PlayerNumber()] = 1.0;
		
		GiveCredits (-1, CheckInventory ("Refunds"));
		TakeInventory ("Refunds", CheckInventory ("Refunds"));
		SpawnSpotForced ("TeleportFog", 0, 0, 0);
		delay (15);
		ActivatorSound ("heavy/argh", 127);
		break;
	case 61:
	case 62:
		if (CheckInventory("PowerFatigue")) {crate = 0; restart;}
		
		// this crate ruins stealth due to speed trails
		if (CheckInventory ("StealthLaserRifle") || CheckInventory ("Knife")) {
			Crate = 0; restart;
		}
		
		if (CheckInventory ("PowerInvisibility")) {
			Crate = 0; restart;
		}
		
		SetFont("SMALLFONT");
		HudMessage (s:"\cAFatigue!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		//LocalAmbientSound("powerup/downsped",255);
		GiveInventory("SpeedDowngrade",1);
		Log(n:0, s:" gets Fatigue crate.");
		break;
	case 63:
	case 64:
		if (CheckInventory ("RemoteC4") && !Override) {
			ACS_ExecuteAlways(309, 0);
			terminate;
		}
		SetFont ("SMALLFONT");
		HudMessage (s:"\cFRemote C4!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		LocalAmbientSound ("c4/remote", 127);
		GiveInventory ("RemoteC4", 1);
		GiveInventory ("RemoteC4Ammo", 4);
		Log(n:0, s:" gets Remote C4 crate.");
		break;
	case 65:
	case 66:
		if (!Override) {
			// stealth just breaks this
			if (CheckInventory ("StealthLaserRifle") || CheckInventory ("Knife")) {
				crate = 0;
				restart;
			}
			
			// no duplicates
			if (CheckInventory ("PowerInvisibility")) {
				crate = 0;
				restart;
			}
		}
		
		SetFont ("SMALLFONT");
		HudMessage (s:"\cFPartial Invisibility!";
			HUDMSG_FADEOUT, 15000, CR_WHITE,
			INTEL_XPOS, INTEL_YPOS, 2.0, 1.0);
		GiveInventory ("BlurSphere", 1);
		Log (n:0, s:" gets Partial Invisibility crate.");
		break;
	case 67:
	case 68:
		str RandomWeapon = -1;
		str x;
		
		// Try determine a random weapon the player doesn't have.
		for (i = 0; i <= 7; i++) {
			x = NormalWeaponNames[random (0, MAX_NORMAL_WEAPONS-1)];
			if (!CheckInventory (x)) {
				RandomWeapon = x;
				break;
			}
		}
		
		if (RandomWeapon != -1) {
			LocalAmbientSound ("misc/w_pkup", 127);
			HudMessage (s:"\cFRandom Weapon!\nYou get a \cF", s:RandomWeapon;
				HUDMSG_FADEOUT, 15000, CR_WHITE,
				INTEL_XPOS, INTEL_YPOS2, 2.0, 1.0);
			
			GiveInventory (RandomWeapon, 1);
		} else {
			// could not find a weapon the player doesn't have. reroll
			Crate = 0;
			restart;
		}
	}
}

// THERMAL CLOAKING
script 953 (void) {
	int k = 0;
	SetPlayerProperty(0,1,PROP_NOTARGET);
	while (CheckInventory ("ThermalCloakingTime") > 0)
	{
		k = CheckInventory ("ThermalCloakingTime");
		SetFont("SMALLFONT");
		HudMessage(s:"Thermal Cloaking: ",d:k,s:" seconds remaining";
			0,8600+PlayerNumber(),CR_GOLD,1.0,0.0,2.0);
		delay(35);
		TakeInventory ("ThermalCloakingTime", 1);
	}
	SetPlayerProperty(0,0,PROP_NOTARGET);
	HudMessage(s:"WARNING! Thermal Cloaking: 0 seconds remaining";
		HUDMSG_FADEOUT,8600+PlayerNumber(),CR_RED,1.0,0.0,5.0,2.0);
}

script 966 (void) CLIENTSIDE {
	// [Dusk] Don't display this actor for the player who's currently
	// getting the bomb crate - said player gets a fade instead.
	if (ACS_ExecuteWithResult (651, 0) == ConsolePlayer) {
		SetActorState (0, "Clear");
		terminate;
	}
	
	if (ACS_ExecuteWithResult (964, 3) <= 0) {
		SetActorState (0, "Clear");
		terminate;
	}
	
	int x = ACS_ExecuteWithResult (964, 0);
	int y = ACS_ExecuteWithResult (964, 1);
	int z = ACS_ExecuteWithResult (964, 2);
	SetActorPosition (0, x, y, z, 0);
}

// target information
script 964 (int type, int value) {
	SetActivatorToTarget (0);
	SetResultValue (0);
	switch (type) {
	case 0: SetResultValue (GetActorX (0)); break;
	case 1: SetResultValue (GetActorY (0)); break;
	case 2: SetResultValue (GetActorZ (0)); break;
	case 3: SetResultValue (GetHealth ()); break;
	case 4: SetResultValue (GetActorAngle (0)); break;
	case 5: SetResultValue (ActivatorTID ()); break;
	case 6: SetPlayerProperty (0, value, PROP_FROZEN); break;
	case 7: SetPlayerProperty (0, value, PROP_TOTALLYFROZEN); break;
	case 8: SetResultValue (CheckInventory (value)); break;
	case 9: SetResultValue (PlayerNumber ()); break;
	}
}