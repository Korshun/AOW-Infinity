Actor ClassID : Inventory {Inventory.MaxAmount 29}

Actor SelfHealCooldown : Boolean {}
Actor IsRed : Boolean {}
Actor IsBlue : Boolean {}
Actor IsFemale : Boolean {}
Actor PurchaseToken : Boolean {}
Actor InRepairs : Boolean {}
Actor HasClass : Boolean {}
Actor IsMech : Boolean {}
Actor TournamentMode : Boolean {}
Actor Refunds : Inventory {Inventory.MaxAmount 10000}
Actor PlayerRank : Inventory {Inventory.MaxAmount 8}
Actor IsCommando : Boolean {}
Actor IsMedic : Boolean {}
Actor IsKamikaze : Boolean {}
Actor IsHarvester : Boolean {}
Actor HighUpgrade : Boolean {}
Actor CrispyPlayer : Boolean {}
Actor CrispyPlayer2 : Inventory {Inventory.MaxAmount 4}
Actor PlayerCredits : Integer {}
Actor PlayerCredits2 : Integer {}
Actor PlayerExperience : Integer {}

// [SP] This item is used to determine whether a util can build turrets in his base.
// He must be close enough to one of his own (standing) structures to do this.
Actor UtilityOutOfRange : Boolean {}

Actor DonateMenu : Boolean {}
Actor DonationName : Inventory {Inventory.MaxAmount 100}

Actor RepairBonus_XP : Inventory {Inventory.MaxAmount 1000}
Actor RepairBonus_Money : Inventory {Inventory.MaxAmount 20}

Actor RepairBonusItem : CustomInventory
{
	Inventory.MaxAmount 9999
	+ALWAYSPICKUP
	States
	{
	Spawn:
		TNT1 A 5
		Stop
	Pickup:
		NULL A 0 //ACS_ExecuteAlways(aow_script325, 0, 0, 0, 0)
		Stop
	}
}

Actor RepairEffectPlayer : CustomInventory
{
	Inventory.MaxAmount 9999
	+ALWAYSPICKUP
	States
	{
	Spawn:
		TNT1 A 5
		Stop
	Pickup:
		NULL AAAAA 0 A_SpawnItemEx("VoltagePuff2", random(-8, 8), random(-8, 8), random(4, 56), 0, 0, 0, 0, 128, 0)
		Stop
	}
}
Actor RepairEffectMech : CustomInventory
{
	Inventory.MaxAmount 9999
	+ALWAYSPICKUP
	States
	{
	Spawn:
		TNT1 A 5
		Stop
	Pickup:
		NULL AAAAA 0 A_SpawnItemEx("VoltagePuff2", random(-29, 29), random(-29, 29), random(4, 128), 0, 0, 0, 0, 128, 0)
		NULL AAAAA 0 A_SpawnItemEx("VoltagePuff2", random(-29, 29), random(-29, 29), random(4, 128), 0, 0, 0, 0, 128, 0)
		Stop
	}
}

// [SP] This item is used to check maps for HOM's. It blurs the screen red - however it also gives invulnerability.
Actor HOMCheckerGL : InvulnerabilitySphere
{
	Powerup.Color "FF 00 00", 0.2
	Powerup.Duration 0x7FFFFFFF
	Inventory.PickupMessage "HOM Checker!"
}

// [NF] Stealth mode.
// 0 = unstealthed
// 1 = fading out (stealthing)
// 2 = stealthed
// 3 = fading in (destealthing)
Actor StealthMode : Inventory
{
		Inventory.amount 0
		Inventory.MaxAmount 3
}

// [NF] players get this when they start pain flashing.
Actor StealthPain : Boolean {}

// [NF] players get this when they're getting forcibly destealthed (see #310, switch case 3)
// Stealth scripts recognize this item and terminate themselves to make way for the destealthing.
Actor DestealthOverride : Boolean {}

// [NF] players get this when they start firing while stealthed. This way
// the script knows to restealth them afterwards
Actor StealthFire : Boolean {}

// token spawned so that clients know to display ticket hud
Actor TicketToken {}

// token spawned at bodycount
Actor BodycountToken {}

Actor SpreeCount : Inventory {Inventory.MaxAmount 31}

Actor PowerNoHealXP : PowerDamage {DamageFactor Normal, 1.0}
Actor NoHealXP : PowerupGiver
{
	+AUTOACTIVATE +ALWAYSPICKUP
	Inventory.MaxAmount 0
	Powerup.Duration -2
	Powerup.Type "NoHealXP"
}

Actor StoredArmorModifier : Inventory {Inventory.MaxAmount 8}