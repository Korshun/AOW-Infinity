// REFILL
script aow_script93 (int unused, int silent) {
	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);
	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);
	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);
	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);
	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);
	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);	GiveInventory("Backpack",1);
	
	if (CheckInventory ("HealingRadiusCount") > 0) SetInventory ("HealingRadiusItem", CheckInventory ("HealingRadiusCount"));
	if (CheckInventory ("ProxyMineCount") > 0) SetInventory ("ProxyMine", CheckInventory ("ProxyMineCount"));
	if (CheckInventory ("TimedC4Count") > 0) SetInventory ("TimedC4", CheckInventory ("TimedC4Count"));
	
	if (!CheckInventory ("IsMech")) SetHealth (GetSpawnHealth());
	
	if (!silent) {
		SetFont ("BIGFONT");
		HudMessage(s:"Refilled!";
			HUDMSG_FADEOUT, 1800+PlayerNumber(), CR_YELLOW, 0.5, 0.45, 2.0, 1.0);
		ActivatorSound("misc/ammo_pkup",255);
	}
}

// TELEPORT BACK TO FIELD
script aow_script94 (int Team) {
	if (!CheckInventory("HasClass")) {
		DisplayCross();
		SETFONT("BigFont");
		HudMessage(s:"You can't leave without choosing a class!";
			HUDMSG_FADEOUT, 240+PlayerNumber(), CR_RED, 0.5, 0.45, 2.0, 1.0);
		terminate;
	}
	
	ACS_ExecuteAlways (aow_script961, 0, Team);
}

// RESIGN
script aow_script95 (int unused, int force) {
	if (MitigateDoublePress() && !force) terminate;
	if (!CheckInventory("HasClass") && !force) {
		DisplayCross();
		SETFONT ("BigFont");
		HudMessage (s:"You don't have a class to resign from!";
			HUDMSG_FADEOUT, 240+PlayerNumber(), CR_RED, 0.5, 0.45, 2.0, 1.0);		
		terminate;
	}
	
	ACS_ExecuteAlways(aow_stealth, 0, 3);
	delay (5);
	SetWeapon("Unarmed");
	TakeInventory("HasClass",1);
	Delay(10);
	
	SetActorProperty(0,APROP_DeathSound,"generic/death");
	SetActorProperty(0,APROP_RenderStyle,STYLE_Normal);
	SetActorProperty(0,APROP_Alpha,1.0);
	
	RefundCredits(Credits[PlayerNumber()+1], CheckInventory("Refunds"));
	TakeInventory("Refunds", 10000);
	bool HasPlasma = false;
	bool HasArtillery = false;
	bool HasTiberiumAutorifle = false;
	bool HasSuperWeapon = false;
	bool HasIronCurtain = false;
	bool HasBerserk = false;
	bool HasChainsaw = false;
	bool HasKamikaze = false;
	bool HasTimeGunPositiveEffect = false;
	bool HasTimeGunNegativeEffect = false;
	if (CheckInventory ("JumpjetSwitch")) GiveInventory ("JumpjetDeactivate", 1);
	if (CheckInventory ("PlasmaCannon")) HasPlasma = True;
	if (CheckInventory ("ArtilleryCannon")) HasArtillery = True;
	if (CheckInventory ("TiberiumAutorifle")) HasTiberiumAutorifle = True;
	if (CheckInventory ("IonCannonBeacon") || CheckInventory("NuclearStrikeBeacon")) HasSuperWeapon = True;
	if (CheckInventory ("PowerInvulnerable")) HasIronCurtain = True;
	if (CheckInventory ("PowerBerserk")) HasBerserk = True;
	if (CheckInventory ("EagerBeaver")) HasChainsaw = True;
	if (CheckInventory ("BombPack")) HasKamikaze = True;
	if (CheckInventory ("PowerTimeGunFloat") || CheckInventory ("PowerTimeGunBoost") || CheckInventory ("IsTeleporting"))
		HasTimeGunPositiveEffect = 1;
	if (CheckInventory ("PowerTimeGunWeaken") || CheckInventory ("PowerTimeGunSlow")) HasTimeGunNegativeEffect = 1;
	TakeInventory ("PowerTimeGunBoost", 1);
	SetActorProperty (0, APROP_Alpha, 1.0);
	SetPlayerProperty (0, 0, PROP_FLY);
	SetPlayerProperty (0, 0, PROP_FROZEN);
	
	ClearInventory ();
	GiveInventory ("Ingame", 1);
	
	// prevents the hud from flashing blue for the two ticks delayed below
	// it still flashes though :/
	if (PlayerTeam() == TEAM_RED) GiveInventory ("IsRed", 1);
	
	// [SP] Insanity resign fix - after insanity is removed, clear inventory again
	delay(2);
	ClearInventory();
	
	GiveInventory ("Ingame", 1);
	GiveInventory ("Unarmed", 1);
	SetAmmoCapacity ("TimedC4Ammo", 1);
	SetAmmoCapacity ("FragGrenadeAmmo", 1);
	SetSpeed (1.0);
	SetHealth (GetSpawnHealth());
	SetActorProperty (0, APROP_RenderStyle, STYLE_Normal);
	SetActorProperty (0, APROP_Alpha, 1.0);
	
	if (HasPlasma) {
		GiveInventory ("PlasmaCannon", 1);
		GiveInventory ("PlasmaCannonAmmo", 10);
	} if (HasArtillery) {
		GiveInventory ("ArtilleryCannon", 1);
		GiveInventory ("ArtilleryShellAmmo", 30);
	} if (HasTiberiumAutorifle) {
		GiveInventory ("TiberiumAutorifle", 1);
		GiveInventory ("TE21CalAmmo", 120);
	}
	if (HasIronCurtain) GiveInventory ("GreenHueRemover", 1);
	if (HasBerserk) GiveInventory ("RedHueRemover", 1);
	if (HasSuperWeapon) {
		if (PlayerTeam() == TEAM_BLUE)
			GiveInventory ("IonCannonBeacon", 1);
		else
			GiveInventory ("NuclearStrikeBeacon", 1);
	}
	
	if (HasChainsaw) GiveInventory ("EagerBeaver", 1);
	if (HasKamikaze) GiveInventory ("NoMoreTerrorism", 1);
	if (HasTimeGunPositiveEffect) GiveInventory ("DimGoldHueRemover", 1);
	if (HasTimeGunNegativeEffect) GiveInventory ("DimRedHueRemover", 1);

	DisplayTick();
	SETFONT("BigFont");
	HudMessage(s:"You have resigned from your class.";
		HUDMSG_FADEOUT, 1800+PlayerNumber(), CR_ORANGE, 0.5, 0.45, 2.0, 1.0);
	
	ACS_ExecuteAlways (aow_script91, 0);
	ACS_ExecuteAlways (aow_script10, 0);
	RecountTimeCops ();
	Log (n:0, s:" resigns.");
	
	delay (3*35);
}

// PURCHASE TERMINAL / RESEARCH TERMINAL / MECH PURCHASE TERMINAL
script aow_script96 (int type) {
	if (MitigateDoublePress()) terminate;
	int dest;
	
	if (PlayerTeam() == type%2) {
		DisplayCross();
		SETFONT("BigFont");
		HudMessage(s:"This is not your terminal!";
			HUDMSG_FADEOUT, 240+PlayerNumber(), CR_RED, 0.5, 0.45, 2.0, 1.0);
		terminate;
	}
	
	if (CheckInventory("IsMech")) {
		DisplayCross();
		SETFONT("BigFont");
		HudMessage(s:"You can't use that in a mech!";
			HUDMSG_FADEOUT, 240+PlayerNumber(), CR_RED, 0.5, 0.45, 2.0, 1.0);
		terminate;
	}
	
	if (type <= 1) {
		// PURCHASE TERMINAL
		dest = 70 + !type;
	} else if (type <= 3) {
		// MECH PURCHASE
		dest = 110;
		if (type == 2)
			dest = 210;
		
		if (!GetCVar("aowr_mechs")) {
			DisplayCross();
			SETFONT("BigFont");
			HudMessage(s:"Mechs have been disabled for this map!";
				HUDMSG_FADEOUT, 240+PlayerNumber(), CR_RED, 0.5, 0.45, 2.0, 1.0);
			
			delay (5);
			ACS_ExecuteAlways (aow_script96, 0, type-2);
			terminate;
		}
		
		if (!CheckFactory (type-2)) {
			delay (5);
			ACS_ExecuteAlways (aow_script96, 0, type-2);
			terminate;
		}
		
		if (CheckInventory("PowerBerserk")) {
			DisplayCross ();
			SetFont ("BIGFONT");
			HudMessage(s:"You can't pilot a mech while berserk!\nYou'll just tear the thing into pieces.";
				HUDMSG_FADEOUT, 240+PlayerNumber(), CR_RED, 0.5, 0.45, 2.0, 1.0);
			delay (5);
			ACS_ExecuteAlways (aow_script96, 0, type-2);
			terminate;
		}

		if (CheckInventory("HighUpgrade")) {
			DisplayCross();
			SetFont ("BIGFONT");
			HudMessage(s:"You have upgraded yourself in a\nway where you must resign!";
				HUDMSG_FADEOUT, 240+PlayerNumber(), CR_RED, 0.5, 0.35, 2.0, 1.0);
			delay (5);
			ACS_ExecuteAlways (aow_script96, 0, type-2);
			terminate;
		}
	} else if (type <= 5) {
		// RESEARCH CENTRE
		dest = 111;
		if (type == 4) dest = 211;
		
		if (!CheckPlant (type-4)) {
			delay (5);
			ACS_ExecuteAlways (aow_script96, 0, type-4);
			terminate;
		}
	}
	
	if (!Teleport (dest)) {
		SpawnSpotForced ("AntiUtilityExplosion", dest, 0, 0);
		delay (10);
		Teleport (dest);
	}
}

script aow_script90 (void) {TakeInventory ("PurchaseToken", 1);}